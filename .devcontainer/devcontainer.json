// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.194.3/containers/alpine
{
  "image": "ghcr.io/xu-cheng/texlive-full:20231201", // fixed texlive version, should match the one in the CI
  // "remoteEnv": {
  //   "JAVA_HOME": "/usr/lib/jvm/default-jvm"
  // },

  // Install git just to assist with visual info and diffs inside the remote container
  "postCreateCommand": "apk add git",

  "customizations": {
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "ltex.java.path": "/usr/lib/jvm/default-jvm"
      },
      // Add the IDs of extensions you want installed when the container is created.
      // Note that some extensions may not work in Alpine Linux. See https://aka.ms/vscode-remote/linux.
      "extensions": [
        "james-yu.latex-workshop",
        // Fails on container, so I need to set the setting above `ltex.java.path`, as the embedded java does not work. Maybe a bug? v13.1.0
        "valentjn.vscode-ltex"
      ]
    }
  }

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  //"remoteUser": "vscode"
}
